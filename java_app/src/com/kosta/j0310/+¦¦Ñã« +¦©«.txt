
<Event처리>
 - 컴포넌트에 기능을 부여하는 것.

1. 컴포넌트에 적용할 이벤트를 분석.

2. EventListener(인터페이스) 상속 
       ---> implements (구현의 약속)
  
    ※ 인터페이스 만드는 방법
     - 분석된 이벤트클래스에서 Event대신 Listener붙임
         예) ActionEvent  ----> ActionListener
         ItemEvent    ----> ItemListener
         MouseEvent   ----> MouseListener 
       
3. 메소드 구현 (이벤트 핸들러)
   - 각 인터페이스의 선언된 메소드를 클래스에 구현
   class A implements ActionListener
   {
      public void actionPerformed(ActionEvent e){  ==> 이벤트처리부(EventHandler)
          //이벤트 발생시(예:버튼눌림)  실행할 기능 구현         
      }
   }


4. 감시자(연결자) 등록 
  (Event Handler이벤트 처리부와 Event Source를 연결)
   
   형식 ===> 이벤트소스명.add인터페이스명(이벤트핸들러위치);
   
   위치 ===> setSize(); setVisible(); 이후에 기술하는 것이 좋다.
   
   예)
       .....
       setSize(300,300);
       setVisible(true);
       bt.addActionListener(this);
         ==> bt(Button)라는 EventSource와 
             actionPerformed()라는 EventHandler를 연결시켜주는 역할!! 
     }//생성자  
         