/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.14
 * Generated at: 2017-05-09 09:30:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.j0509;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewFile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>하이 차트 샘플</title>\r\n");
      out.write("<script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/data.js\"></script>\r\n");
      out.write("<script src=\"https://code.highcharts.com/modules/drilldown.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<div id=\"container\"\r\n");
      out.write("\tstyle=\"min-width: 310px; height: 400px; margin: 0 auto\"></div>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t//Create the chart\r\n");
      out.write("\t\tHighcharts\r\n");
      out.write("\t\t\t\t.chart(\r\n");
      out.write("\t\t\t\t\t\t'container',\r\n");
      out.write("\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\tchart : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'column'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : 'Browser market shares. January, 2015 to May, 2015'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsubtitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttext : 'Click the columns to view versions. Source: <a href=\"http://netmarketshare.com\">netmarketshare.com</a>.'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\txAxis : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttype : 'category'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tyAxis : {\r\n");
      out.write("\t\t\t\t\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttext : 'Total percent market share'\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\t\t\t\tenabled : false\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tplotOptions : {\r\n");
      out.write("\t\t\t\t\t\t\t\tseries : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tborderWidth : 0,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdataLabels : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tenabled : true,\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tformat : '{point.y:.1f}%'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\ttooltip : {\r\n");
      out.write("\t\t\t\t\t\t\t\theaderFormat : '<span style=\"font-size:11px\">{series.name}</span><br>',\r\n");
      out.write("\t\t\t\t\t\t\t\tpointFormat : '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\tseries : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\tname : 'Brands',\r\n");
      out.write("\t\t\t\t\t\t\t\tcolorByPoint : true,\r\n");
      out.write("\t\t\t\t\t\t\t\tdata : [ {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Microsoft Internet Explorer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 56.33,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : 'Microsoft Internet Explorer'\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Chrome',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 24.03,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : 'Chrome'\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Firefox',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 10.38,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : 'Firefox'\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Safari',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 4.77,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : 'Safari'\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Opera',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 0.91,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : 'Opera'\r\n");
      out.write("\t\t\t\t\t\t\t\t}, {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tname : 'Proprietary or Undetectable',\r\n");
      out.write("\t\t\t\t\t\t\t\t\ty : 0.2,\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdrilldown : null\r\n");
      out.write("\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t} ],\r\n");
      out.write("\t\t\t\t\t\t\tdrilldown : {\r\n");
      out.write("\t\t\t\t\t\t\t\tseries : [\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname : 'Microsoft Internet Explorer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid : 'Microsoft Internet Explorer',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : [ [ 'v11.0', 24.13 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v8.0', 17.2 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v9.0', 8.11 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v10.0', 5.33 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v6.0', 1.06 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v7.0', 0.5 ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname : 'Chrome',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid : 'Chrome',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : [ [ 'v40.0', 5 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v41.0', 4.32 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v42.0', 3.68 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v39.0', 2.96 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v36.0', 2.53 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v43.0', 1.45 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v31.0', 1.24 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v35.0', 0.85 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v38.0', 0.6 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v32.0', 0.55 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v37.0', 0.38 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v33.0', 0.19 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v34.0', 0.14 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v30.0', 0.14 ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname : 'Firefox',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid : 'Firefox',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : [ [ 'v35', 2.76 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v36', 2.32 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v37', 2.31 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v34', 1.27 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v38', 1.02 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v31', 0.33 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v33', 0.22 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v32', 0.15 ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname : 'Safari',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid : 'Safari',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : [ [ 'v8.0', 2.56 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v7.1', 0.77 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v5.1', 0.42 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v5.0', 0.3 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v6.1', 0.29 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v7.0', 0.26 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v6.2', 0.17 ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tname : 'Opera',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tid : 'Opera',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : [ [ 'v12.x', 0.34 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v28', 0.24 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v27', 0.17 ],\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t[ 'v29', 0.16 ] ]\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t} ]\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
